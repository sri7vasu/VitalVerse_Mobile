import { HttpHandlerOptions } from "@aws-sdk/types";
import { HttpHandler, HttpRequest, HttpResponse } from "@aws-sdk/protocol-http";
/**
 * Represents the http options that can be passed to a browser http client.
 */
export interface BrowserHttpOptions {
    /**
     * The number of milliseconds a request can take before being automatically
     * terminated.
     */
    requestTimeout?: number;
    /**
     * Buffer the whole response body before returning. This option is useful in the
     * runtime that doesn't support ReadableStream in response like ReactNative. When
     * set to true, the response body of http handler will be a Blob instead of
     * ReadableStream.
     * This option is only useful in ReactNative.
     */
    bufferBody?: boolean;
}
export declare class FetchHttpHandler implements HttpHandler {
    private readonly httpOptions;
    constructor(httpOptions?: BrowserHttpOptions);
    destroy(): void;
    handle(request: HttpRequest, options: HttpHandlerOptions): Promise<{
        response: HttpResponse;
    }>;
}
