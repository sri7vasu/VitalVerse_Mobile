"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_base64_browser_1 = require("@aws-sdk/util-base64-browser");
//reference: https://snack.expo.io/r1JCSWRGU
exports.streamCollector = function (stream) {
    return readToBase64(stream)
        .then(function (base64) { return util_base64_browser_1.fromBase64(base64); })
        .then(function (arrayBuffer) { return new Uint8Array(arrayBuffer); });
};
var readToBase64 = function (blob) {
    return new Promise(function (resolve, reject) {
        var reader = new FileReader();
        reader.onloadend = function () {
            // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL
            // response from readAsDataURL is always prepended with "data:*/*;base64,"
            if (reader.readyState !== 2) {
                return reject(new Error("Reader aborted too early"));
            }
            var result = reader.result;
            var dataOffset = result.indexOf(",") + 1;
            resolve(result.substring(dataOffset));
        };
        reader.onabort = function () { return reject(new Error("Read aborted")); };
        reader.onerror = function () { return reject(reader.error); };
        // reader.readAsArrayBuffer is not available in RN
        reader.readAsDataURL(blob);
    });
};
//# sourceMappingURL=index.js.map