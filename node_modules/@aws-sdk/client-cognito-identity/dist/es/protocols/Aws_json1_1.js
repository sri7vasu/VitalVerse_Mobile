import { __assign, __awaiter, __generator, __values } from "tslib";
import { HttpRequest as __HttpRequest } from "@aws-sdk/protocol-http";
export function serializeAws_json1_1CreateIdentityPoolCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.CreateIdentityPool";
            body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1DeleteIdentitiesCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.DeleteIdentities";
            body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1DeleteIdentityPoolCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.DeleteIdentityPool";
            body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1DescribeIdentityCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.DescribeIdentity";
            body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1DescribeIdentityPoolCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.DescribeIdentityPool";
            body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1GetCredentialsForIdentityCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] =
                "AWSCognitoIdentityService.GetCredentialsForIdentity";
            body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1GetIdCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.GetId";
            body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1GetIdentityPoolRolesCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.GetIdentityPoolRoles";
            body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1GetOpenIdTokenCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.GetOpenIdToken";
            body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] =
                "AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity";
            body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1ListIdentitiesCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.ListIdentities";
            body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1ListIdentityPoolsCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.ListIdentityPools";
            body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1ListTagsForResourceCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.ListTagsForResource";
            body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1LookupDeveloperIdentityCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.LookupDeveloperIdentity";
            body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1MergeDeveloperIdentitiesCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] =
                "AWSCognitoIdentityService.MergeDeveloperIdentities";
            body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1SetIdentityPoolRolesCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.SetIdentityPoolRoles";
            body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1TagResourceCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.TagResource";
            body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1UnlinkDeveloperIdentityCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.UnlinkDeveloperIdentity";
            body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1UnlinkIdentityCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.UnlinkIdentity";
            body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1UntagResourceCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.UntagResource";
            body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function serializeAws_json1_1UpdateIdentityPoolCommand(input, context) {
    return __awaiter(this, void 0, void 0, function () {
        var headers, body;
        return __generator(this, function (_a) {
            headers = {};
            headers["Content-Type"] = "application/x-amz-json-1.1";
            headers["X-Amz-Target"] = "AWSCognitoIdentityService.UpdateIdentityPool";
            body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));
            return [2 /*return*/, buildHttpRpcRequest(context, headers, "/", undefined, body)];
        });
    });
}
export function deserializeAws_json1_1CreateIdentityPoolCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1CreateIdentityPoolCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1IdentityPool(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "IdentityPool" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1CreateIdentityPoolCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;
        return __generator(this, function (_k) {
            switch (_k.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "LimitExceededException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#LimitExceededException": return [3 /*break*/, 6];
                        case "NotAuthorizedException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 8];
                        case "ResourceConflictException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 10];
                        case "TooManyRequestsException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 12];
                    }
                    return [3 /*break*/, 14];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 14:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _k.label = 15;
                case 15:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1DeleteIdentitiesCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1DeleteIdentitiesCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "DeleteIdentitiesResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1DeleteIdentitiesCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "TooManyRequestsException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 6];
                    }
                    return [3 /*break*/, 8];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 9];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 9];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 9];
                case 8:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _g.label = 9;
                case 9:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1DeleteIdentityPoolCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context)];
                    }
                    return [4 /*yield*/, collectBody(output.body, context)];
                case 1:
                    _a.sent();
                    response = {
                        $metadata: deserializeMetadata(output)
                    };
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceNotFoundException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 8];
                        case "TooManyRequestsException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 12:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _j.label = 13;
                case 13:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1DescribeIdentityCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1DescribeIdentityCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1IdentityDescription(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "IdentityDescription" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1DescribeIdentityCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceNotFoundException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 8];
                        case "TooManyRequestsException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 12:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _j.label = 13;
                case 13:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1DescribeIdentityPoolCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1IdentityPool(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "IdentityPool" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceNotFoundException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 8];
                        case "TooManyRequestsException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 12:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _j.label = 13;
                case 13:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1GetCredentialsForIdentityCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "GetCredentialsForIdentityResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;
        return __generator(this, function (_m) {
            switch (_m.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _m.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "ExternalServiceException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#ExternalServiceException": return [3 /*break*/, 2];
                        case "InternalErrorException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 4];
                        case "InvalidIdentityPoolConfigurationException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#InvalidIdentityPoolConfigurationException": return [3 /*break*/, 6];
                        case "InvalidParameterException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 8];
                        case "NotAuthorizedException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 10];
                        case "ResourceConflictException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 12];
                        case "ResourceNotFoundException": return [3 /*break*/, 14];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 14];
                        case "TooManyRequestsException": return [3 /*break*/, 16];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 16];
                    }
                    return [3 /*break*/, 18];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 14:
                    _k = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 15:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 16:
                    _l = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 17:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 18:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _m.label = 19;
                case 19:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1GetIdCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1GetIdCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1GetIdResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "GetIdResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1GetIdCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;
        return __generator(this, function (_m) {
            switch (_m.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _m.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "ExternalServiceException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#ExternalServiceException": return [3 /*break*/, 2];
                        case "InternalErrorException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 4];
                        case "InvalidParameterException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 6];
                        case "LimitExceededException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#LimitExceededException": return [3 /*break*/, 8];
                        case "NotAuthorizedException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 10];
                        case "ResourceConflictException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 12];
                        case "ResourceNotFoundException": return [3 /*break*/, 14];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 14];
                        case "TooManyRequestsException": return [3 /*break*/, 16];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 16];
                    }
                    return [3 /*break*/, 18];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 14:
                    _k = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 15:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 16:
                    _l = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 17:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 18:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _m.label = 19;
                case 19:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1GetIdentityPoolRolesCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "GetIdentityPoolRolesResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;
        return __generator(this, function (_k) {
            switch (_k.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceConflictException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 8];
                        case "ResourceNotFoundException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 10];
                        case "TooManyRequestsException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 12];
                    }
                    return [3 /*break*/, 14];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 14:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _k.label = 15;
                case 15:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1GetOpenIdTokenCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1GetOpenIdTokenCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "GetOpenIdTokenResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1GetOpenIdTokenCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;
        return __generator(this, function (_l) {
            switch (_l.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _l.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "ExternalServiceException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#ExternalServiceException": return [3 /*break*/, 2];
                        case "InternalErrorException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 4];
                        case "InvalidParameterException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 6];
                        case "NotAuthorizedException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 8];
                        case "ResourceConflictException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 10];
                        case "ResourceNotFoundException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 12];
                        case "TooManyRequestsException": return [3 /*break*/, 14];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 14];
                    }
                    return [3 /*break*/, 16];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 14:
                    _k = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 15:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 16:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _l.label = 17;
                case 17:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "GetOpenIdTokenForDeveloperIdentityResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;
        return __generator(this, function (_l) {
            switch (_l.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _l.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "DeveloperUserAlreadyRegisteredException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#DeveloperUserAlreadyRegisteredException": return [3 /*break*/, 2];
                        case "InternalErrorException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 4];
                        case "InvalidParameterException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 6];
                        case "NotAuthorizedException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 8];
                        case "ResourceConflictException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 10];
                        case "ResourceNotFoundException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 12];
                        case "TooManyRequestsException": return [3 /*break*/, 14];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 14];
                    }
                    return [3 /*break*/, 16];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 14:
                    _k = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 15:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 16:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _l.label = 17;
                case 17:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1ListIdentitiesCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1ListIdentitiesCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "ListIdentitiesResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1ListIdentitiesCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceNotFoundException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 8];
                        case "TooManyRequestsException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 12:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _j.label = 13;
                case 13:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1ListIdentityPoolsCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1ListIdentityPoolsCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "ListIdentityPoolsResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1ListIdentityPoolsCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceNotFoundException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 8];
                        case "TooManyRequestsException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 12:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _j.label = 13;
                case 13:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1ListTagsForResourceCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1ListTagsForResourceCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "ListTagsForResourceResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1ListTagsForResourceCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceNotFoundException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 8];
                        case "TooManyRequestsException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 12:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _j.label = 13;
                case 13:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1LookupDeveloperIdentityCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "LookupDeveloperIdentityResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;
        return __generator(this, function (_k) {
            switch (_k.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceConflictException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 8];
                        case "ResourceNotFoundException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 10];
                        case "TooManyRequestsException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 12];
                    }
                    return [3 /*break*/, 14];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 14:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _k.label = 15;
                case 15:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1MergeDeveloperIdentitiesCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "MergeDeveloperIdentitiesResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;
        return __generator(this, function (_k) {
            switch (_k.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceConflictException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 8];
                        case "ResourceNotFoundException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 10];
                        case "TooManyRequestsException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 12];
                    }
                    return [3 /*break*/, 14];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 14:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _k.label = 15;
                case 15:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1SetIdentityPoolRolesCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context)];
                    }
                    return [4 /*yield*/, collectBody(output.body, context)];
                case 1:
                    _a.sent();
                    response = {
                        $metadata: deserializeMetadata(output)
                    };
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;
        return __generator(this, function (_l) {
            switch (_l.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _l.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "ConcurrentModificationException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#ConcurrentModificationException": return [3 /*break*/, 2];
                        case "InternalErrorException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 4];
                        case "InvalidParameterException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 6];
                        case "NotAuthorizedException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 8];
                        case "ResourceConflictException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 10];
                        case "ResourceNotFoundException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 12];
                        case "TooManyRequestsException": return [3 /*break*/, 14];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 14];
                    }
                    return [3 /*break*/, 16];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 14:
                    _k = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 15:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 16:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _l.label = 17;
                case 17:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1TagResourceCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1TagResourceCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1TagResourceResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "TagResourceResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1TagResourceCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceNotFoundException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 8];
                        case "TooManyRequestsException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 12:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _j.label = 13;
                case 13:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1UnlinkDeveloperIdentityCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context)];
                    }
                    return [4 /*yield*/, collectBody(output.body, context)];
                case 1:
                    _a.sent();
                    response = {
                        $metadata: deserializeMetadata(output)
                    };
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;
        return __generator(this, function (_k) {
            switch (_k.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _k.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceConflictException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 8];
                        case "ResourceNotFoundException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 10];
                        case "TooManyRequestsException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 12];
                    }
                    return [3 /*break*/, 14];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 15];
                case 14:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _k.label = 15;
                case 15:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1UnlinkIdentityCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1UnlinkIdentityCommandError(output, context)];
                    }
                    return [4 /*yield*/, collectBody(output.body, context)];
                case 1:
                    _a.sent();
                    response = {
                        $metadata: deserializeMetadata(output)
                    };
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1UnlinkIdentityCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;
        return __generator(this, function (_l) {
            switch (_l.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _l.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "ExternalServiceException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#ExternalServiceException": return [3 /*break*/, 2];
                        case "InternalErrorException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 4];
                        case "InvalidParameterException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 6];
                        case "NotAuthorizedException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 8];
                        case "ResourceConflictException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 10];
                        case "ResourceNotFoundException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 12];
                        case "TooManyRequestsException": return [3 /*break*/, 14];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 14];
                    }
                    return [3 /*break*/, 16];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 14:
                    _k = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 15:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 17];
                case 16:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _l.label = 17;
                case 17:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1UntagResourceCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1UntagResourceCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1UntagResourceResponse(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "UntagResourceResponse" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1UntagResourceCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "InternalErrorException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 2];
                        case "InvalidParameterException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 4];
                        case "NotAuthorizedException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 6];
                        case "ResourceNotFoundException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 8];
                        case "TooManyRequestsException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 13];
                case 12:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _j.label = 13;
                case 13:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
export function deserializeAws_json1_1UpdateIdentityPoolCommand(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var data, contents, response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (output.statusCode >= 400) {
                        return [2 /*return*/, deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context)];
                    }
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    data = _a.sent();
                    contents = {};
                    contents = deserializeAws_json1_1IdentityPool(data, context);
                    response = __assign({ $metadata: deserializeMetadata(output), __type: "IdentityPool" }, contents);
                    return [2 /*return*/, Promise.resolve(response)];
            }
        });
    });
}
function deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context) {
    return __awaiter(this, void 0, void 0, function () {
        var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;
        return __generator(this, function (_m) {
            switch (_m.label) {
                case 0:
                    _a = [__assign({}, output)];
                    _b = {};
                    return [4 /*yield*/, parseBody(output.body, context)];
                case 1:
                    parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _m.sent(), _b)]));
                    errorCode = "UnknownError";
                    errorTypeParts = parsedOutput.body["__type"].split("#");
                    errorCode =
                        errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];
                    _c = errorCode;
                    switch (_c) {
                        case "ConcurrentModificationException": return [3 /*break*/, 2];
                        case "com.amazonaws.cognito.identity.model#ConcurrentModificationException": return [3 /*break*/, 2];
                        case "InternalErrorException": return [3 /*break*/, 4];
                        case "com.amazonaws.cognito.identity.model#InternalErrorException": return [3 /*break*/, 4];
                        case "InvalidParameterException": return [3 /*break*/, 6];
                        case "com.amazonaws.cognito.identity.model#InvalidParameterException": return [3 /*break*/, 6];
                        case "LimitExceededException": return [3 /*break*/, 8];
                        case "com.amazonaws.cognito.identity.model#LimitExceededException": return [3 /*break*/, 8];
                        case "NotAuthorizedException": return [3 /*break*/, 10];
                        case "com.amazonaws.cognito.identity.model#NotAuthorizedException": return [3 /*break*/, 10];
                        case "ResourceConflictException": return [3 /*break*/, 12];
                        case "com.amazonaws.cognito.identity.model#ResourceConflictException": return [3 /*break*/, 12];
                        case "ResourceNotFoundException": return [3 /*break*/, 14];
                        case "com.amazonaws.cognito.identity.model#ResourceNotFoundException": return [3 /*break*/, 14];
                        case "TooManyRequestsException": return [3 /*break*/, 16];
                        case "com.amazonaws.cognito.identity.model#TooManyRequestsException": return [3 /*break*/, 16];
                    }
                    return [3 /*break*/, 18];
                case 2:
                    _d = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];
                case 3:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 4:
                    _e = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)];
                case 5:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 6:
                    _f = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];
                case 7:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 8:
                    _g = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];
                case 9:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 10:
                    _h = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)];
                case 11:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 12:
                    _j = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)];
                case 13:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 14:
                    _k = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];
                case 15:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 16:
                    _l = [{}];
                    return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];
                case 17:
                    response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                    return [3 /*break*/, 19];
                case 18:
                    parsedBody = parsedOutput.body;
                    errorCode = parsedBody.code || parsedBody.Code || errorCode;
                    response = __assign(__assign({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                    _m.label = 19;
                case 19:
                    message = response.message || response.Message || errorCode;
                    response.message = message;
                    delete response.Message;
                    return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
            }
        });
    });
}
var deserializeAws_json1_1ConcurrentModificationExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);
        contents = __assign({ name: "ConcurrentModificationException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);
        contents = __assign({ name: "DeveloperUserAlreadyRegisteredException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1ExternalServiceExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ExternalServiceException(body, context);
        contents = __assign({ name: "ExternalServiceException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1InternalErrorExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InternalErrorException(body, context);
        contents = __assign({ name: "InternalErrorException", $fault: "server", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);
        contents = __assign({ name: "InvalidIdentityPoolConfigurationException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1InvalidParameterExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1InvalidParameterException(body, context);
        contents = __assign({ name: "InvalidParameterException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1LimitExceededException(body, context);
        contents = __assign({ name: "LimitExceededException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1NotAuthorizedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1NotAuthorizedException(body, context);
        contents = __assign({ name: "NotAuthorizedException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1ResourceConflictExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ResourceConflictException(body, context);
        contents = __assign({ name: "ResourceConflictException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);
        contents = __assign({ name: "ResourceNotFoundException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_json1_1TooManyRequestsExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {
    var body, deserialized, contents;
    return __generator(this, function (_a) {
        body = parsedOutput.body;
        deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);
        contents = __assign({ name: "TooManyRequestsException", $fault: "client", $metadata: deserializeMetadata(parsedOutput) }, deserialized);
        return [2 /*return*/, contents];
    });
}); };
var serializeAws_json1_1CognitoIdentityProvider = function (input, context) {
    var bodyParams = {};
    if (input.ClientId !== undefined) {
        bodyParams["ClientId"] = input.ClientId;
    }
    if (input.ProviderName !== undefined) {
        bodyParams["ProviderName"] = input.ProviderName;
    }
    if (input.ServerSideTokenCheck !== undefined) {
        bodyParams["ServerSideTokenCheck"] = input.ServerSideTokenCheck;
    }
    return bodyParams;
};
var serializeAws_json1_1CognitoIdentityProviderList = function (input, context) {
    var e_1, _a;
    var contents = [];
    try {
        for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {
            var entry = input_1_1.value;
            contents.push(serializeAws_json1_1CognitoIdentityProvider(entry, context));
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return contents;
};
var serializeAws_json1_1CreateIdentityPoolInput = function (input, context) {
    var bodyParams = {};
    if (input.AllowClassicFlow !== undefined) {
        bodyParams["AllowClassicFlow"] = input.AllowClassicFlow;
    }
    if (input.AllowUnauthenticatedIdentities !== undefined) {
        bodyParams["AllowUnauthenticatedIdentities"] =
            input.AllowUnauthenticatedIdentities;
    }
    if (input.CognitoIdentityProviders !== undefined) {
        bodyParams["CognitoIdentityProviders"] = serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context);
    }
    if (input.DeveloperProviderName !== undefined) {
        bodyParams["DeveloperProviderName"] = input.DeveloperProviderName;
    }
    if (input.IdentityPoolName !== undefined) {
        bodyParams["IdentityPoolName"] = input.IdentityPoolName;
    }
    if (input.IdentityPoolTags !== undefined) {
        bodyParams["IdentityPoolTags"] = serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context);
    }
    if (input.OpenIdConnectProviderARNs !== undefined) {
        bodyParams["OpenIdConnectProviderARNs"] = serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context);
    }
    if (input.SamlProviderARNs !== undefined) {
        bodyParams["SamlProviderARNs"] = serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context);
    }
    if (input.SupportedLoginProviders !== undefined) {
        bodyParams["SupportedLoginProviders"] = serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context);
    }
    return bodyParams;
};
var serializeAws_json1_1DeleteIdentitiesInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityIdsToDelete !== undefined) {
        bodyParams["IdentityIdsToDelete"] = serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context);
    }
    return bodyParams;
};
var serializeAws_json1_1DeleteIdentityPoolInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    return bodyParams;
};
var serializeAws_json1_1DescribeIdentityInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityId !== undefined) {
        bodyParams["IdentityId"] = input.IdentityId;
    }
    return bodyParams;
};
var serializeAws_json1_1DescribeIdentityPoolInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    return bodyParams;
};
var serializeAws_json1_1GetCredentialsForIdentityInput = function (input, context) {
    var bodyParams = {};
    if (input.CustomRoleArn !== undefined) {
        bodyParams["CustomRoleArn"] = input.CustomRoleArn;
    }
    if (input.IdentityId !== undefined) {
        bodyParams["IdentityId"] = input.IdentityId;
    }
    if (input.Logins !== undefined) {
        bodyParams["Logins"] = serializeAws_json1_1LoginsMap(input.Logins, context);
    }
    return bodyParams;
};
var serializeAws_json1_1GetIdInput = function (input, context) {
    var bodyParams = {};
    if (input.AccountId !== undefined) {
        bodyParams["AccountId"] = input.AccountId;
    }
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    if (input.Logins !== undefined) {
        bodyParams["Logins"] = serializeAws_json1_1LoginsMap(input.Logins, context);
    }
    return bodyParams;
};
var serializeAws_json1_1GetIdentityPoolRolesInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    return bodyParams;
};
var serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityId !== undefined) {
        bodyParams["IdentityId"] = input.IdentityId;
    }
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    if (input.Logins !== undefined) {
        bodyParams["Logins"] = serializeAws_json1_1LoginsMap(input.Logins, context);
    }
    if (input.TokenDuration !== undefined) {
        bodyParams["TokenDuration"] = input.TokenDuration;
    }
    return bodyParams;
};
var serializeAws_json1_1GetOpenIdTokenInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityId !== undefined) {
        bodyParams["IdentityId"] = input.IdentityId;
    }
    if (input.Logins !== undefined) {
        bodyParams["Logins"] = serializeAws_json1_1LoginsMap(input.Logins, context);
    }
    return bodyParams;
};
var serializeAws_json1_1IdentityIdList = function (input, context) {
    var e_2, _a;
    var contents = [];
    try {
        for (var input_2 = __values(input), input_2_1 = input_2.next(); !input_2_1.done; input_2_1 = input_2.next()) {
            var entry = input_2_1.value;
            contents.push(entry);
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (input_2_1 && !input_2_1.done && (_a = input_2.return)) _a.call(input_2);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return contents;
};
var serializeAws_json1_1IdentityPool = function (input, context) {
    var bodyParams = {};
    if (input.AllowClassicFlow !== undefined) {
        bodyParams["AllowClassicFlow"] = input.AllowClassicFlow;
    }
    if (input.AllowUnauthenticatedIdentities !== undefined) {
        bodyParams["AllowUnauthenticatedIdentities"] =
            input.AllowUnauthenticatedIdentities;
    }
    if (input.CognitoIdentityProviders !== undefined) {
        bodyParams["CognitoIdentityProviders"] = serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context);
    }
    if (input.DeveloperProviderName !== undefined) {
        bodyParams["DeveloperProviderName"] = input.DeveloperProviderName;
    }
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    if (input.IdentityPoolName !== undefined) {
        bodyParams["IdentityPoolName"] = input.IdentityPoolName;
    }
    if (input.IdentityPoolTags !== undefined) {
        bodyParams["IdentityPoolTags"] = serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context);
    }
    if (input.OpenIdConnectProviderARNs !== undefined) {
        bodyParams["OpenIdConnectProviderARNs"] = serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context);
    }
    if (input.SamlProviderARNs !== undefined) {
        bodyParams["SamlProviderARNs"] = serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context);
    }
    if (input.SupportedLoginProviders !== undefined) {
        bodyParams["SupportedLoginProviders"] = serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context);
    }
    return bodyParams;
};
var serializeAws_json1_1IdentityPoolTagsListType = function (input, context) {
    var e_3, _a;
    var contents = [];
    try {
        for (var input_3 = __values(input), input_3_1 = input_3.next(); !input_3_1.done; input_3_1 = input_3.next()) {
            var entry = input_3_1.value;
            contents.push(entry);
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (input_3_1 && !input_3_1.done && (_a = input_3.return)) _a.call(input_3);
        }
        finally { if (e_3) throw e_3.error; }
    }
    return contents;
};
var serializeAws_json1_1IdentityPoolTagsType = function (input, context) {
    var mapParams = {};
    Object.keys(input).forEach(function (key) {
        mapParams[key] = input[key];
    });
    return mapParams;
};
var serializeAws_json1_1IdentityProviders = function (input, context) {
    var mapParams = {};
    Object.keys(input).forEach(function (key) {
        mapParams[key] = input[key];
    });
    return mapParams;
};
var serializeAws_json1_1ListIdentitiesInput = function (input, context) {
    var bodyParams = {};
    if (input.HideDisabled !== undefined) {
        bodyParams["HideDisabled"] = input.HideDisabled;
    }
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    if (input.MaxResults !== undefined) {
        bodyParams["MaxResults"] = input.MaxResults;
    }
    if (input.NextToken !== undefined) {
        bodyParams["NextToken"] = input.NextToken;
    }
    return bodyParams;
};
var serializeAws_json1_1ListIdentityPoolsInput = function (input, context) {
    var bodyParams = {};
    if (input.MaxResults !== undefined) {
        bodyParams["MaxResults"] = input.MaxResults;
    }
    if (input.NextToken !== undefined) {
        bodyParams["NextToken"] = input.NextToken;
    }
    return bodyParams;
};
var serializeAws_json1_1ListTagsForResourceInput = function (input, context) {
    var bodyParams = {};
    if (input.ResourceArn !== undefined) {
        bodyParams["ResourceArn"] = input.ResourceArn;
    }
    return bodyParams;
};
var serializeAws_json1_1LoginsList = function (input, context) {
    var e_4, _a;
    var contents = [];
    try {
        for (var input_4 = __values(input), input_4_1 = input_4.next(); !input_4_1.done; input_4_1 = input_4.next()) {
            var entry = input_4_1.value;
            contents.push(entry);
        }
    }
    catch (e_4_1) { e_4 = { error: e_4_1 }; }
    finally {
        try {
            if (input_4_1 && !input_4_1.done && (_a = input_4.return)) _a.call(input_4);
        }
        finally { if (e_4) throw e_4.error; }
    }
    return contents;
};
var serializeAws_json1_1LoginsMap = function (input, context) {
    var mapParams = {};
    Object.keys(input).forEach(function (key) {
        mapParams[key] = input[key];
    });
    return mapParams;
};
var serializeAws_json1_1LookupDeveloperIdentityInput = function (input, context) {
    var bodyParams = {};
    if (input.DeveloperUserIdentifier !== undefined) {
        bodyParams["DeveloperUserIdentifier"] = input.DeveloperUserIdentifier;
    }
    if (input.IdentityId !== undefined) {
        bodyParams["IdentityId"] = input.IdentityId;
    }
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    if (input.MaxResults !== undefined) {
        bodyParams["MaxResults"] = input.MaxResults;
    }
    if (input.NextToken !== undefined) {
        bodyParams["NextToken"] = input.NextToken;
    }
    return bodyParams;
};
var serializeAws_json1_1MappingRule = function (input, context) {
    var bodyParams = {};
    if (input.Claim !== undefined) {
        bodyParams["Claim"] = input.Claim;
    }
    if (input.MatchType !== undefined) {
        bodyParams["MatchType"] = input.MatchType;
    }
    if (input.RoleARN !== undefined) {
        bodyParams["RoleARN"] = input.RoleARN;
    }
    if (input.Value !== undefined) {
        bodyParams["Value"] = input.Value;
    }
    return bodyParams;
};
var serializeAws_json1_1MappingRulesList = function (input, context) {
    var e_5, _a;
    var contents = [];
    try {
        for (var input_5 = __values(input), input_5_1 = input_5.next(); !input_5_1.done; input_5_1 = input_5.next()) {
            var entry = input_5_1.value;
            contents.push(serializeAws_json1_1MappingRule(entry, context));
        }
    }
    catch (e_5_1) { e_5 = { error: e_5_1 }; }
    finally {
        try {
            if (input_5_1 && !input_5_1.done && (_a = input_5.return)) _a.call(input_5);
        }
        finally { if (e_5) throw e_5.error; }
    }
    return contents;
};
var serializeAws_json1_1MergeDeveloperIdentitiesInput = function (input, context) {
    var bodyParams = {};
    if (input.DestinationUserIdentifier !== undefined) {
        bodyParams["DestinationUserIdentifier"] = input.DestinationUserIdentifier;
    }
    if (input.DeveloperProviderName !== undefined) {
        bodyParams["DeveloperProviderName"] = input.DeveloperProviderName;
    }
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    if (input.SourceUserIdentifier !== undefined) {
        bodyParams["SourceUserIdentifier"] = input.SourceUserIdentifier;
    }
    return bodyParams;
};
var serializeAws_json1_1OIDCProviderList = function (input, context) {
    var e_6, _a;
    var contents = [];
    try {
        for (var input_6 = __values(input), input_6_1 = input_6.next(); !input_6_1.done; input_6_1 = input_6.next()) {
            var entry = input_6_1.value;
            contents.push(entry);
        }
    }
    catch (e_6_1) { e_6 = { error: e_6_1 }; }
    finally {
        try {
            if (input_6_1 && !input_6_1.done && (_a = input_6.return)) _a.call(input_6);
        }
        finally { if (e_6) throw e_6.error; }
    }
    return contents;
};
var serializeAws_json1_1RoleMapping = function (input, context) {
    var bodyParams = {};
    if (input.AmbiguousRoleResolution !== undefined) {
        bodyParams["AmbiguousRoleResolution"] = input.AmbiguousRoleResolution;
    }
    if (input.RulesConfiguration !== undefined) {
        bodyParams["RulesConfiguration"] = serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context);
    }
    if (input.Type !== undefined) {
        bodyParams["Type"] = input.Type;
    }
    return bodyParams;
};
var serializeAws_json1_1RoleMappingMap = function (input, context) {
    var mapParams = {};
    Object.keys(input).forEach(function (key) {
        mapParams[key] = serializeAws_json1_1RoleMapping(input[key], context);
    });
    return mapParams;
};
var serializeAws_json1_1RolesMap = function (input, context) {
    var mapParams = {};
    Object.keys(input).forEach(function (key) {
        mapParams[key] = input[key];
    });
    return mapParams;
};
var serializeAws_json1_1RulesConfigurationType = function (input, context) {
    var bodyParams = {};
    if (input.Rules !== undefined) {
        bodyParams["Rules"] = serializeAws_json1_1MappingRulesList(input.Rules, context);
    }
    return bodyParams;
};
var serializeAws_json1_1SAMLProviderList = function (input, context) {
    var e_7, _a;
    var contents = [];
    try {
        for (var input_7 = __values(input), input_7_1 = input_7.next(); !input_7_1.done; input_7_1 = input_7.next()) {
            var entry = input_7_1.value;
            contents.push(entry);
        }
    }
    catch (e_7_1) { e_7 = { error: e_7_1 }; }
    finally {
        try {
            if (input_7_1 && !input_7_1.done && (_a = input_7.return)) _a.call(input_7);
        }
        finally { if (e_7) throw e_7.error; }
    }
    return contents;
};
var serializeAws_json1_1SetIdentityPoolRolesInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    if (input.RoleMappings !== undefined) {
        bodyParams["RoleMappings"] = serializeAws_json1_1RoleMappingMap(input.RoleMappings, context);
    }
    if (input.Roles !== undefined) {
        bodyParams["Roles"] = serializeAws_json1_1RolesMap(input.Roles, context);
    }
    return bodyParams;
};
var serializeAws_json1_1TagResourceInput = function (input, context) {
    var bodyParams = {};
    if (input.ResourceArn !== undefined) {
        bodyParams["ResourceArn"] = input.ResourceArn;
    }
    if (input.Tags !== undefined) {
        bodyParams["Tags"] = serializeAws_json1_1IdentityPoolTagsType(input.Tags, context);
    }
    return bodyParams;
};
var serializeAws_json1_1UnlinkDeveloperIdentityInput = function (input, context) {
    var bodyParams = {};
    if (input.DeveloperProviderName !== undefined) {
        bodyParams["DeveloperProviderName"] = input.DeveloperProviderName;
    }
    if (input.DeveloperUserIdentifier !== undefined) {
        bodyParams["DeveloperUserIdentifier"] = input.DeveloperUserIdentifier;
    }
    if (input.IdentityId !== undefined) {
        bodyParams["IdentityId"] = input.IdentityId;
    }
    if (input.IdentityPoolId !== undefined) {
        bodyParams["IdentityPoolId"] = input.IdentityPoolId;
    }
    return bodyParams;
};
var serializeAws_json1_1UnlinkIdentityInput = function (input, context) {
    var bodyParams = {};
    if (input.IdentityId !== undefined) {
        bodyParams["IdentityId"] = input.IdentityId;
    }
    if (input.Logins !== undefined) {
        bodyParams["Logins"] = serializeAws_json1_1LoginsMap(input.Logins, context);
    }
    if (input.LoginsToRemove !== undefined) {
        bodyParams["LoginsToRemove"] = serializeAws_json1_1LoginsList(input.LoginsToRemove, context);
    }
    return bodyParams;
};
var serializeAws_json1_1UntagResourceInput = function (input, context) {
    var bodyParams = {};
    if (input.ResourceArn !== undefined) {
        bodyParams["ResourceArn"] = input.ResourceArn;
    }
    if (input.TagKeys !== undefined) {
        bodyParams["TagKeys"] = serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context);
    }
    return bodyParams;
};
var deserializeAws_json1_1CognitoIdentityProvider = function (output, context) {
    var contents = {
        __type: "CognitoIdentityProvider",
        ClientId: undefined,
        ProviderName: undefined,
        ServerSideTokenCheck: undefined
    };
    if (output.ClientId !== undefined && output.ClientId !== null) {
        contents.ClientId = output.ClientId;
    }
    if (output.ProviderName !== undefined && output.ProviderName !== null) {
        contents.ProviderName = output.ProviderName;
    }
    if (output.ServerSideTokenCheck !== undefined &&
        output.ServerSideTokenCheck !== null) {
        contents.ServerSideTokenCheck = output.ServerSideTokenCheck;
    }
    return contents;
};
var deserializeAws_json1_1CognitoIdentityProviderList = function (output, context) {
    return (output || []).map(function (entry) {
        return deserializeAws_json1_1CognitoIdentityProvider(entry, context);
    });
};
var deserializeAws_json1_1ConcurrentModificationException = function (output, context) {
    var contents = {
        __type: "ConcurrentModificationException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1Credentials = function (output, context) {
    var contents = {
        __type: "Credentials",
        AccessKeyId: undefined,
        Expiration: undefined,
        SecretKey: undefined,
        SessionToken: undefined
    };
    if (output.AccessKeyId !== undefined && output.AccessKeyId !== null) {
        contents.AccessKeyId = output.AccessKeyId;
    }
    if (output.Expiration !== undefined && output.Expiration !== null) {
        contents.Expiration = new Date(Math.round(output.Expiration * 1000));
    }
    if (output.SecretKey !== undefined && output.SecretKey !== null) {
        contents.SecretKey = output.SecretKey;
    }
    if (output.SessionToken !== undefined && output.SessionToken !== null) {
        contents.SessionToken = output.SessionToken;
    }
    return contents;
};
var deserializeAws_json1_1DeleteIdentitiesResponse = function (output, context) {
    var contents = {
        __type: "DeleteIdentitiesResponse",
        UnprocessedIdentityIds: undefined
    };
    if (output.UnprocessedIdentityIds !== undefined &&
        output.UnprocessedIdentityIds !== null) {
        contents.UnprocessedIdentityIds = deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context);
    }
    return contents;
};
var deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = function (output, context) {
    var contents = {
        __type: "DeveloperUserAlreadyRegisteredException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1DeveloperUserIdentifierList = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_json1_1ExternalServiceException = function (output, context) {
    var contents = {
        __type: "ExternalServiceException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1GetCredentialsForIdentityResponse = function (output, context) {
    var contents = {
        __type: "GetCredentialsForIdentityResponse",
        Credentials: undefined,
        IdentityId: undefined
    };
    if (output.Credentials !== undefined && output.Credentials !== null) {
        contents.Credentials = deserializeAws_json1_1Credentials(output.Credentials, context);
    }
    if (output.IdentityId !== undefined && output.IdentityId !== null) {
        contents.IdentityId = output.IdentityId;
    }
    return contents;
};
var deserializeAws_json1_1GetIdResponse = function (output, context) {
    var contents = {
        __type: "GetIdResponse",
        IdentityId: undefined
    };
    if (output.IdentityId !== undefined && output.IdentityId !== null) {
        contents.IdentityId = output.IdentityId;
    }
    return contents;
};
var deserializeAws_json1_1GetIdentityPoolRolesResponse = function (output, context) {
    var contents = {
        __type: "GetIdentityPoolRolesResponse",
        IdentityPoolId: undefined,
        RoleMappings: undefined,
        Roles: undefined
    };
    if (output.IdentityPoolId !== undefined && output.IdentityPoolId !== null) {
        contents.IdentityPoolId = output.IdentityPoolId;
    }
    if (output.RoleMappings !== undefined && output.RoleMappings !== null) {
        contents.RoleMappings = deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context);
    }
    if (output.Roles !== undefined && output.Roles !== null) {
        contents.Roles = deserializeAws_json1_1RolesMap(output.Roles, context);
    }
    return contents;
};
var deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = function (output, context) {
    var contents = {
        __type: "GetOpenIdTokenForDeveloperIdentityResponse",
        IdentityId: undefined,
        Token: undefined
    };
    if (output.IdentityId !== undefined && output.IdentityId !== null) {
        contents.IdentityId = output.IdentityId;
    }
    if (output.Token !== undefined && output.Token !== null) {
        contents.Token = output.Token;
    }
    return contents;
};
var deserializeAws_json1_1GetOpenIdTokenResponse = function (output, context) {
    var contents = {
        __type: "GetOpenIdTokenResponse",
        IdentityId: undefined,
        Token: undefined
    };
    if (output.IdentityId !== undefined && output.IdentityId !== null) {
        contents.IdentityId = output.IdentityId;
    }
    if (output.Token !== undefined && output.Token !== null) {
        contents.Token = output.Token;
    }
    return contents;
};
var deserializeAws_json1_1IdentitiesList = function (output, context) {
    return (output || []).map(function (entry) {
        return deserializeAws_json1_1IdentityDescription(entry, context);
    });
};
var deserializeAws_json1_1IdentityDescription = function (output, context) {
    var contents = {
        __type: "IdentityDescription",
        CreationDate: undefined,
        IdentityId: undefined,
        LastModifiedDate: undefined,
        Logins: undefined
    };
    if (output.CreationDate !== undefined && output.CreationDate !== null) {
        contents.CreationDate = new Date(Math.round(output.CreationDate * 1000));
    }
    if (output.IdentityId !== undefined && output.IdentityId !== null) {
        contents.IdentityId = output.IdentityId;
    }
    if (output.LastModifiedDate !== undefined &&
        output.LastModifiedDate !== null) {
        contents.LastModifiedDate = new Date(Math.round(output.LastModifiedDate * 1000));
    }
    if (output.Logins !== undefined && output.Logins !== null) {
        contents.Logins = deserializeAws_json1_1LoginsList(output.Logins, context);
    }
    return contents;
};
var deserializeAws_json1_1IdentityPool = function (output, context) {
    var contents = {
        __type: "IdentityPool",
        AllowClassicFlow: undefined,
        AllowUnauthenticatedIdentities: undefined,
        CognitoIdentityProviders: undefined,
        DeveloperProviderName: undefined,
        IdentityPoolId: undefined,
        IdentityPoolName: undefined,
        IdentityPoolTags: undefined,
        OpenIdConnectProviderARNs: undefined,
        SamlProviderARNs: undefined,
        SupportedLoginProviders: undefined
    };
    if (output.AllowClassicFlow !== undefined &&
        output.AllowClassicFlow !== null) {
        contents.AllowClassicFlow = output.AllowClassicFlow;
    }
    if (output.AllowUnauthenticatedIdentities !== undefined &&
        output.AllowUnauthenticatedIdentities !== null) {
        contents.AllowUnauthenticatedIdentities =
            output.AllowUnauthenticatedIdentities;
    }
    if (output.CognitoIdentityProviders !== undefined &&
        output.CognitoIdentityProviders !== null) {
        contents.CognitoIdentityProviders = deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context);
    }
    if (output.DeveloperProviderName !== undefined &&
        output.DeveloperProviderName !== null) {
        contents.DeveloperProviderName = output.DeveloperProviderName;
    }
    if (output.IdentityPoolId !== undefined && output.IdentityPoolId !== null) {
        contents.IdentityPoolId = output.IdentityPoolId;
    }
    if (output.IdentityPoolName !== undefined &&
        output.IdentityPoolName !== null) {
        contents.IdentityPoolName = output.IdentityPoolName;
    }
    if (output.IdentityPoolTags !== undefined &&
        output.IdentityPoolTags !== null) {
        contents.IdentityPoolTags = deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context);
    }
    if (output.OpenIdConnectProviderARNs !== undefined &&
        output.OpenIdConnectProviderARNs !== null) {
        contents.OpenIdConnectProviderARNs = deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context);
    }
    if (output.SamlProviderARNs !== undefined &&
        output.SamlProviderARNs !== null) {
        contents.SamlProviderARNs = deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context);
    }
    if (output.SupportedLoginProviders !== undefined &&
        output.SupportedLoginProviders !== null) {
        contents.SupportedLoginProviders = deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context);
    }
    return contents;
};
var deserializeAws_json1_1IdentityPoolShortDescription = function (output, context) {
    var contents = {
        __type: "IdentityPoolShortDescription",
        IdentityPoolId: undefined,
        IdentityPoolName: undefined
    };
    if (output.IdentityPoolId !== undefined && output.IdentityPoolId !== null) {
        contents.IdentityPoolId = output.IdentityPoolId;
    }
    if (output.IdentityPoolName !== undefined &&
        output.IdentityPoolName !== null) {
        contents.IdentityPoolName = output.IdentityPoolName;
    }
    return contents;
};
var deserializeAws_json1_1IdentityPoolTagsType = function (output, context) {
    var mapParams = {};
    Object.keys(output).forEach(function (key) {
        mapParams[key] = output[key];
    });
    return mapParams;
};
var deserializeAws_json1_1IdentityPoolsList = function (output, context) {
    return (output || []).map(function (entry) {
        return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);
    });
};
var deserializeAws_json1_1IdentityProviders = function (output, context) {
    var mapParams = {};
    Object.keys(output).forEach(function (key) {
        mapParams[key] = output[key];
    });
    return mapParams;
};
var deserializeAws_json1_1InternalErrorException = function (output, context) {
    var contents = {
        __type: "InternalErrorException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1InvalidIdentityPoolConfigurationException = function (output, context) {
    var contents = {
        __type: "InvalidIdentityPoolConfigurationException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1InvalidParameterException = function (output, context) {
    var contents = {
        __type: "InvalidParameterException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1LimitExceededException = function (output, context) {
    var contents = {
        __type: "LimitExceededException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1ListIdentitiesResponse = function (output, context) {
    var contents = {
        __type: "ListIdentitiesResponse",
        Identities: undefined,
        IdentityPoolId: undefined,
        NextToken: undefined
    };
    if (output.Identities !== undefined && output.Identities !== null) {
        contents.Identities = deserializeAws_json1_1IdentitiesList(output.Identities, context);
    }
    if (output.IdentityPoolId !== undefined && output.IdentityPoolId !== null) {
        contents.IdentityPoolId = output.IdentityPoolId;
    }
    if (output.NextToken !== undefined && output.NextToken !== null) {
        contents.NextToken = output.NextToken;
    }
    return contents;
};
var deserializeAws_json1_1ListIdentityPoolsResponse = function (output, context) {
    var contents = {
        __type: "ListIdentityPoolsResponse",
        IdentityPools: undefined,
        NextToken: undefined
    };
    if (output.IdentityPools !== undefined && output.IdentityPools !== null) {
        contents.IdentityPools = deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context);
    }
    if (output.NextToken !== undefined && output.NextToken !== null) {
        contents.NextToken = output.NextToken;
    }
    return contents;
};
var deserializeAws_json1_1ListTagsForResourceResponse = function (output, context) {
    var contents = {
        __type: "ListTagsForResourceResponse",
        Tags: undefined
    };
    if (output.Tags !== undefined && output.Tags !== null) {
        contents.Tags = deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context);
    }
    return contents;
};
var deserializeAws_json1_1LoginsList = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_json1_1LookupDeveloperIdentityResponse = function (output, context) {
    var contents = {
        __type: "LookupDeveloperIdentityResponse",
        DeveloperUserIdentifierList: undefined,
        IdentityId: undefined,
        NextToken: undefined
    };
    if (output.DeveloperUserIdentifierList !== undefined &&
        output.DeveloperUserIdentifierList !== null) {
        contents.DeveloperUserIdentifierList = deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context);
    }
    if (output.IdentityId !== undefined && output.IdentityId !== null) {
        contents.IdentityId = output.IdentityId;
    }
    if (output.NextToken !== undefined && output.NextToken !== null) {
        contents.NextToken = output.NextToken;
    }
    return contents;
};
var deserializeAws_json1_1MappingRule = function (output, context) {
    var contents = {
        __type: "MappingRule",
        Claim: undefined,
        MatchType: undefined,
        RoleARN: undefined,
        Value: undefined
    };
    if (output.Claim !== undefined && output.Claim !== null) {
        contents.Claim = output.Claim;
    }
    if (output.MatchType !== undefined && output.MatchType !== null) {
        contents.MatchType = output.MatchType;
    }
    if (output.RoleARN !== undefined && output.RoleARN !== null) {
        contents.RoleARN = output.RoleARN;
    }
    if (output.Value !== undefined && output.Value !== null) {
        contents.Value = output.Value;
    }
    return contents;
};
var deserializeAws_json1_1MappingRulesList = function (output, context) {
    return (output || []).map(function (entry) {
        return deserializeAws_json1_1MappingRule(entry, context);
    });
};
var deserializeAws_json1_1MergeDeveloperIdentitiesResponse = function (output, context) {
    var contents = {
        __type: "MergeDeveloperIdentitiesResponse",
        IdentityId: undefined
    };
    if (output.IdentityId !== undefined && output.IdentityId !== null) {
        contents.IdentityId = output.IdentityId;
    }
    return contents;
};
var deserializeAws_json1_1NotAuthorizedException = function (output, context) {
    var contents = {
        __type: "NotAuthorizedException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1OIDCProviderList = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_json1_1ResourceConflictException = function (output, context) {
    var contents = {
        __type: "ResourceConflictException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1ResourceNotFoundException = function (output, context) {
    var contents = {
        __type: "ResourceNotFoundException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1RoleMapping = function (output, context) {
    var contents = {
        __type: "RoleMapping",
        AmbiguousRoleResolution: undefined,
        RulesConfiguration: undefined,
        Type: undefined
    };
    if (output.AmbiguousRoleResolution !== undefined &&
        output.AmbiguousRoleResolution !== null) {
        contents.AmbiguousRoleResolution = output.AmbiguousRoleResolution;
    }
    if (output.RulesConfiguration !== undefined &&
        output.RulesConfiguration !== null) {
        contents.RulesConfiguration = deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context);
    }
    if (output.Type !== undefined && output.Type !== null) {
        contents.Type = output.Type;
    }
    return contents;
};
var deserializeAws_json1_1RoleMappingMap = function (output, context) {
    var mapParams = {};
    Object.keys(output).forEach(function (key) {
        mapParams[key] = deserializeAws_json1_1RoleMapping(output[key], context);
    });
    return mapParams;
};
var deserializeAws_json1_1RolesMap = function (output, context) {
    var mapParams = {};
    Object.keys(output).forEach(function (key) {
        mapParams[key] = output[key];
    });
    return mapParams;
};
var deserializeAws_json1_1RulesConfigurationType = function (output, context) {
    var contents = {
        __type: "RulesConfigurationType",
        Rules: undefined
    };
    if (output.Rules !== undefined && output.Rules !== null) {
        contents.Rules = deserializeAws_json1_1MappingRulesList(output.Rules, context);
    }
    return contents;
};
var deserializeAws_json1_1SAMLProviderList = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_json1_1TagResourceResponse = function (output, context) {
    var contents = {
        __type: "TagResourceResponse"
    };
    return contents;
};
var deserializeAws_json1_1TooManyRequestsException = function (output, context) {
    var contents = {
        __type: "TooManyRequestsException",
        message: undefined
    };
    if (output.message !== undefined && output.message !== null) {
        contents.message = output.message;
    }
    return contents;
};
var deserializeAws_json1_1UnprocessedIdentityId = function (output, context) {
    var contents = {
        __type: "UnprocessedIdentityId",
        ErrorCode: undefined,
        IdentityId: undefined
    };
    if (output.ErrorCode !== undefined && output.ErrorCode !== null) {
        contents.ErrorCode = output.ErrorCode;
    }
    if (output.IdentityId !== undefined && output.IdentityId !== null) {
        contents.IdentityId = output.IdentityId;
    }
    return contents;
};
var deserializeAws_json1_1UnprocessedIdentityIdList = function (output, context) {
    return (output || []).map(function (entry) {
        return deserializeAws_json1_1UnprocessedIdentityId(entry, context);
    });
};
var deserializeAws_json1_1UntagResourceResponse = function (output, context) {
    var contents = {
        __type: "UntagResourceResponse"
    };
    return contents;
};
var deserializeMetadata = function (output) { return ({
    httpStatusCode: output.statusCode,
    httpHeaders: output.headers,
    requestId: output.headers["x-amzn-requestid"]
}); };
// Collect low-level response body stream to Uint8Array.
var collectBody = function (streamBody, context) {
    if (streamBody instanceof Uint8Array) {
        return Promise.resolve(streamBody);
    }
    return (context.streamCollector(streamBody) || Promise.resolve(new Uint8Array()));
};
// Encode Uint8Array data into string with utf-8.
var collectBodyString = function (streamBody, context) {
    return collectBody(streamBody, context).then(function (body) {
        return context.utf8Encoder(body);
    });
};
var buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {
    var contents = __assign(__assign({}, context.endpoint), { protocol: "https", method: "POST", path: path, headers: headers });
    if (resolvedHostname !== undefined) {
        contents.hostname = resolvedHostname;
    }
    if (body !== undefined) {
        contents.body = body;
    }
    return new __HttpRequest(contents);
};
var parseBody = function (streamBody, context) {
    return collectBodyString(streamBody, context).then(function (encoded) {
        if (encoded.length) {
            return JSON.parse(encoded);
        }
        return {};
    });
};
//# sourceMappingURL=Aws_json1_1.js.map